apiVersion: v1
kind: Template
metadata:
  name: vehicle-market
parameters:
- name: DOMAIN
  description: Domain name for the routes.
  required: true
- name: USERS
  description: Number of inserted users
  value: "1000"
- name: TOKENS
  description: Number of activated user tokens
  value: "100"
- name: OFFERS
  description: Number of generated vehicle offers
  value: "1000"
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: postgres
    labels:
      app: vehicle-market
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: postgres
    template:
      metadata:
        name: postgres
        labels:
          app: vehicle-market
          deployment: postgres
      spec:
        containers:
        - name: db
          image: quay.io/hyperfoil/vehicle-market-postgres
          ports:
          - containerPort: 5432
          volumeMounts:
          - name: db
            mountPath: /var/lib/postgresql
        volumes:
        - name: db
          emptyDir: {}
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: postgres
    labels:
      app: vehicle-market
  spec:
    ports:
    - name: db-5432
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: vehicle-market
      deployment: postgres
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: discovery
    labels:
      app: vehicle-market
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: discovery
    template:
      metadata:
        name: discovery
        labels:
          app: vehicle-market
          deployment: discovery
      spec:
        containers:
        - name: discovery
          image: quay.io/hyperfoil/vehicle-market-vehicle-discovery
          ports:
          - containerPort: 8081
          env:
          - name: QUARKUS_DATASOURCE_JDBC_URL
            value: jdbc:postgresql://postgres:5432/vehicle
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: discovery
    labels:
      app: vehicle-market
  spec:
    ports:
    - name: http-8081
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: vehicle-market
      deployment: discovery
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: vehicle-market
    name: discovery
  spec:
    port:
      targetPort: http-8081
    to:
      kind: Service
      name: discovery
    host: discovery.${DOMAIN}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: listing
    labels:
      app: vehicle-market
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: listing
    template:
      metadata:
        name: listing
        labels:
          app: vehicle-market
          deployment: listing
      spec:
        containers:
        - name: listing
          image: quay.io/hyperfoil/vehicle-market-listing-service
          ports:
          - containerPort: 8082
          env:
          - name: QUARKUS_DATASOURCE_JDBC_URL
            value: jdbc:postgresql://postgres:5432/vehicle
          - name: DISCOVERY_SERVICE_MP_REST_URL
            value: http://discovery:8081/
    triggers:
    - type: ConfigChange
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: vehicle-market
    name: listing
  spec:
    port:
      targetPort: http-8082
    to:
      kind: Service
      name: listing
    host: listing.${DOMAIN}
- apiVersion: v1
  kind: Service
  metadata:
    name: listing
    labels:
      app: vehicle-market
  spec:
    ports:
    - name: http-8082
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app: vehicle-market
      deployment: listing
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: user
    labels:
      app: vehicle-market
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: user
    template:
      metadata:
        name: user
        labels:
          app: vehicle-market
          deployment: user
      spec:
        containers:
        - name: user
          image: quay.io/hyperfoil/vehicle-market-user-service
          ports:
          - containerPort: 8083
          env:
          - name: QUARKUS_DATASOURCE_JDBC_URL
            value: jdbc:postgresql://postgres:5432/user
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: user
    labels:
      app: vehicle-market
  spec:
    ports:
    - name: http-8083
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app: vehicle-market
      deployment: user
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: vehicle-market
    name: user
  spec:
    port:
      targetPort: http-8083
    to:
      kind: Service
      name: user
    host: user.${DOMAIN}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
    labels:
      app: vehicle-market
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: frontend
    template:
      metadata:
        name: frontend
        labels:
          app: vehicle-market
          deployment: frontend
      spec:
        initContainers:
        - name: loaders
          # All we need is curl
          image: quay.io/hyperfoil/vehicle-market-frontend
          command:
          - bash
          - -c
          - |
              curl -s http://discovery:8081/vehicle-loader -X DELETE &&
              curl -s http://discovery:8081/vehicle-loader/local -X POST &&
              curl -s http://listing:8082/loader/features -X POST &&
              curl -s http://listing:8082/loader/offering -X DELETE &&
              curl -s http://listing:8082/loader/offering/${OFFERS} -X POST &&
              curl -s http://user:8083/user-loader -X DELETE &&
              curl -s 'http://user:8083/user-loader?users=${USERS}&tokens=${TOKENS}' -X POST
        containers:
        - name: frontend
          image: quay.io/hyperfoil/vehicle-market-frontend
          ports:
          - containerPort: 8080
          env:
          - name: DISCOVERY_SERVICE_URL
            value: http://discovery.${DOMAIN}
          - name: LISTING_SERVICE_URL
            value: http://listing.${DOMAIN}
          - name: USER_SERVICE_URL
            value: http://user.${DOMAIN}
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: vehicle-market
  spec:
    ports:
    - name: http-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: vehicle-market
      deployment: frontend
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: vehicle-market
    name: frontend
  spec:
    port:
      targetPort: http-8080
    to:
      kind: Service
      name: frontend
    host: ${DOMAIN}
